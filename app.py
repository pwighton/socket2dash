import streamlit as st # web development
import numpy as np # np mean, np random 
import pandas as pd # read csv, df manipulation
import time # to simulate a real time data, time loop 
import plotly.express as px # interactive charts 


# read csv from a github repo
df = pd.read_csv("https://raw.githubusercontent.com/Lexie88rus/bank-marketing-analysis/master/bank.csv")

moco_data = np.array([[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
       [-1.82943210e+01,  1.82389500e+01,  2.74507200e+00,
         1.89328785e-01,  1.83256043e+00, -1.02114731e+01],
       [-3.51277970e+01,  3.86221650e+01,  4.19278000e+00,
         4.20105070e-01,  3.12134095e+00, -1.95053866e+01],
       [-4.51219630e+01,  5.54086100e+01,  4.21641100e+00,
         5.93979918e-01,  3.36003212e+00, -2.65399247e+01],
       [ 1.69429480e+01, -9.75080900e+00, -8.30201800e+00,
         1.00180628e+00, -4.45711316e+00,  7.21864896e+00],
       [ 4.30991050e+01, -2.09070360e+01, -9.34305600e+00,
         9.45017016e-01, -5.12948000e+00,  1.79741942e+01],
       [ 6.91533270e+01, -2.74843820e+01, -9.19165600e+00,
         3.39045171e-01, -6.65617744e+00,  2.83723021e+01],
       [ 8.50149720e+01, -3.08039580e+01, -6.84108900e+00,
        -4.43069659e-01, -5.22425148e+00,  3.54581278e+01],
       [ 1.13607310e+01, -8.91197700e+00, -6.96840000e-01,
         7.54156206e-02, -4.64929544e-01,  5.99683061e+00],
       [ 1.34126690e+01, -8.92234700e+00,  1.67219910e+01,
         5.83863163e-01, -3.65474254e+00,  6.02529340e+00],
       [-2.83371400e+00,  3.78522700e+00,  1.94801140e+01,
         1.32446846e+00, -6.50777234e-01, -1.96556642e+00],
       [-1.21169500e+01,  1.24360410e+01,  2.36291080e+01,
         5.48016962e-01, -5.01913601e-01, -7.18530694e+00],
       [-2.58626870e+01,  2.72246630e+01,  2.80040520e+01,
         4.97806973e-01,  1.99425659e+00, -1.46087052e+01],
       [-4.48813840e+01,  5.62349590e+01,  2.47411770e+01,
         6.13988962e-01,  3.31472578e+00, -2.72319232e+01],
       [ 3.79636900e+00, -3.16765300e+00,  2.17995940e+01,
         3.79259985e-01, -2.37340655e+00,  2.04025787e+00],
       [ 2.48160340e+01, -1.65002350e+01,  1.92598400e+01,
         5.72952143e-01, -2.99843225e+00,  1.19238042e+01],
       [ 4.60938320e+01, -2.36786820e+01,  2.23349710e+01,
         4.39205253e-01, -2.81321374e+00,  1.99191929e+01],
       [ 6.34699860e+01, -2.90846460e+01,  2.71397170e+01,
        -3.15972532e-01, -3.62848844e+00,  2.73567244e+01],
       [-2.59922500e+00,  2.59226200e+00,  2.97077550e+01,
         3.37249936e-01,  4.52990870e-01, -1.49314669e+00],
       [-1.43525560e+01,  2.21811460e+01, -6.08248200e+00,
         1.44201797e+01,  6.88470052e+00, -6.18320303e+00],
       [-1.20965620e+01,  2.07444700e+01, -9.73556400e+00,
         1.91675729e+01,  8.52795961e+00, -2.69178497e+00],
       [ 2.03762460e+01, -1.70238000e+00, -2.43187690e+01,
         1.82486109e+01,  9.13868511e-01,  1.23224592e+01],
       [ 5.16242750e+01, -1.43859820e+01, -2.49355230e+01,
         1.60794099e+01, -2.14544283e+00,  2.42106564e+01],
       [ 1.79974010e+01, -4.83251100e+00, -1.71790930e+01,
         1.72226609e+01,  4.50758454e+00,  1.29605431e+01],
       [-9.64103800e+00,  2.49823070e+01, -2.01798230e+01,
         1.72850476e+01,  2.65001046e+00, -5.66792890e+00],
       [-1.48690100e+01,  3.73795330e+01, -2.50736820e+01,
         1.69231340e+01, -5.52042165e-01, -1.30234411e+01],
       [-4.20098190e+01,  7.81469570e+01, -2.05093310e+01,
         1.59451883e+01, -8.29086803e-01, -3.18105304e+01],
       [-3.80618020e+01,  1.62607242e+02,  9.38797240e+01,
         1.73361420e+02,  1.05075456e+01,  2.50333039e+01],
       [-3.89516420e+01,  1.28567148e+02, -4.89028830e+01,
         6.84859068e+01,  1.87396712e+01, -1.06118209e+01],
       [-2.75177590e+01,  1.26433011e+02, -6.46786060e+01,
         6.43543609e+01,  1.18081191e+01, -1.46324103e+01],
       [-4.36894600e+00,  1.10877184e+02, -8.63289380e+01,
         6.42900686e+01, -3.87025754e-01, -9.33507809e+00],
       [ 2.86968230e+01,  1.08012434e+02, -1.03781606e+02,
         6.45332235e+01, -1.37589711e+01, -1.10288005e+01],
       [ 5.13698660e+01,  9.48609060e+01, -1.10548996e+02,
         6.26314032e+01, -2.25677450e+01, -4.45634146e+00],
       [ 3.20000890e+01,  1.06345021e+02, -9.19452800e+01,
         7.15894002e+01, -1.48730925e+01, -4.66512810e+00],
       [ 5.66248510e+01,  1.08616260e+02, -9.48684570e+01,
         6.47306783e+01, -2.56720894e+01,  2.28652702e-01],
       [ 1.37978410e+01,  9.32970240e+01, -9.59766570e+01,
         6.08461768e+01, -7.83888085e+00, -3.37113567e+00],
       [ 3.40986600e+00,  1.33874985e+02, -8.58261850e+01,
         7.06520301e+01, -5.44080549e-01, -1.58688738e+01],
       [ 4.95206600e+01,  9.98160230e+01, -1.11084088e+02,
         6.38154788e+01, -2.18464564e+01, -5.92665540e+00],
       [ 4.10783390e+01, -2.01499290e+01,  1.79404400e+00,
         6.78570315e-01, -6.10617693e+00,  1.67255577e+01],
       [ 1.25460220e+01, -1.34300000e-01, -1.22510430e+01,
         3.60472164e+00, -1.01592206e+01,  1.92514673e+00],
       [ 1.65040900e+01,  3.77826670e+01, -4.83642260e+01,
         3.71079423e+01, -1.07665147e+01, -1.03188972e+00],
       [ 7.84324300e+00,  4.88503130e+01, -4.93573630e+01,
         3.82480488e+01, -8.54278519e+00, -5.81843459e+00],
       [ 2.12381090e+01,  4.21231070e+01, -6.11868110e+01,
         2.65359226e+01, -1.65686628e+01, -8.35067253e+00],
       [ 2.34228350e+01, -2.54087700e+00, -2.61598290e+01,
         7.20410061e+00, -8.90120616e+00,  7.31079394e+00],
       [ 9.48778600e+00,  4.70914600e+00, -2.46479310e+01,
         5.56009548e+00, -1.03051567e+01, -4.98430229e-01],
       [ 1.06651190e+01, -9.12859600e+00,  1.69469340e+01,
         2.01271943e+00,  4.24625300e+00,  6.53014671e+00],
       [ 6.22517060e+01, -2.76938280e+01, -1.74438500e+00,
         5.75486955e-01, -7.82699406e-01,  2.68378555e+01],
       [-1.40314830e+01,  1.33854380e+01,  2.21018500e+00,
         2.62110034e-01,  1.56216144e+00, -7.58716913e+00],
       [ 4.14470100e+00, -2.91844900e+00, -2.73881300e+00,
         2.83038965e-01, -1.20363957e+00,  1.98384324e+00],
       [ 4.92441000e+00, -4.20864200e+00,  1.58645060e+01,
         3.51862333e-01, -1.58861185e+00,  2.57883868e+00]])

st.set_page_config(
    page_title = 'Real-Time Moco Dashboard',
    page_icon = 'âœ…',
    layout = 'wide'
)

# dashboard title

st.title("Real-Time Moco Dashboard")

# top-level filters 

#job_filter = st.selectbox("Select the Job", pd.unique(df['job']))


# creating a single-element container.
placeholder = st.empty()

# dataframe filter 

df = df[df['job']=='technician']

# near real-time / live feed simulation 

num_ticks = moco_data.shape[0]
moco_df = pd.DataFrame([moco_data[0,:]], columns = ['x','y','z', 'rot_x', 'rot_y', 'rot_z'])

for tick in range(1,num_ticks):
    new_df = pd.DataFrame([moco_data[tick,:]], columns = ['x','y','z', 'rot_x', 'rot_y', 'rot_z'])    
    moco_df = pd.concat([moco_df, new_df], ignore_index = True)

    with placeholder.container():
        st.markdown('## Tick: '+str(tick))
        st.markdown("### Translations (mm)")
        trans_line_chart = st.line_chart(moco_df, x=None, y=["x","y","z"], height=200)

        st.markdown("### rotations (deg)")
        rot_line_chart = st.line_chart(moco_df, x=None, y=["rot_x","rot_y","rot_z"], height=200)

        st.markdown("### Detailed View")
        
        #st.dataframe(moco_df)
        # incomming tick on top
        st.dataframe(moco_df.iloc[::-1])
        #st.dataframe(new_df)
        
        time.sleep(1)
